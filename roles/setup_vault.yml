####################################################################
# Install Vault
####################################################################
- name: Install unzip
  apt:
    name: ['unzip']
    state: latest

- name: Create vault group
  group:
    name: 'vault'
    state: present

- name: Create vault user
  user:
    name: vault
    home: '/etc/vault'
    shell: /usr/sbin/nologin

- name: Stat Vault install
  stat:
    path: '/usr/local/bin/vault'
  register: vault_install

- name: Download Vault
  get_url:
    url: '{{ vault_dl_url }}'
    dest: /tmp/vault_{{ vault_version }}_linux_{{ arch }}.zip
  when: not vault_install.stat.exists

- name: Unarchive Vault
  unarchive:
    src: /tmp/vault_{{ vault_version }}_linux_{{ arch }}.zip
    dest: /tmp
    remote_src: true
  when: not vault_install.stat.exists

- name: Copy Vault binary
  copy:
    src: /tmp/vault
    dest: /usr/local/bin/vault
    remote_src: true
    owner: root
    group: root
    mode: 0755
  when: not vault_install.stat.exists

- name: Create Vault directory
  file:
    path: '/var/lib/vault'
    state: directory
    owner: vault
    group: vault
    mode: 0755

- name: Create Vault config directory
  file:
    path: '/etc/vault'
    state: directory
    owner: vault
    group: vault

- name: Copy Vault config
  template:
    src: 'conf/ansible/vault/vault.hcl'
    dest: '/etc/vault/config.hcl'
    owner: vault
    group: vault
    mode: 0400

- name: Copy SystemD for vault
  template:
    src: 'conf/ansible/vault/vault.service'
    dest: '/etc/systemd/system/vault.service'
    owner: root
    group: root
    mode: 0400

- name: Restart Vault service
  service:
    name: 'vault'
    state: restarted
    enabled: yes

- name: Vault healthcheck
  uri:
    url: "http://127.0.0.1:8200/v1/sys/health"
    follow_redirects: none
    method: GET
    remote_src: yes
    status_code: 501
  register: _result
  until: _result.status == 501
  retries: 720 # 720 * 5 seconds = 1hour (60*60/5)
  delay: 5 # Every 5 seconds

