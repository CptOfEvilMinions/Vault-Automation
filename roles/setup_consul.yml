####################################################################
# Install Consul
####################################################################
- name: Install unzip
  apt:
    name: ['unzip']
    state: latest

- name: Create consul group
  group:
    name: 'consul'
    state: present

- name: Create consul user
  user:
    name: consul
    shell: /usr/sbin/nologin

- name: Stat Consul install
  stat:
    path: '/usr/local/bin/consul'
  register: consul_install

- name: Download Consul
  get_url:
    url: '{{ consul_dl_url }}'
    dest: /tmp/consul_{{ consul_version }}_linux_amd64.zip
  when: not consul_install.stat.exists

- name: Unarchive Consul
  unarchive:
    src: /tmp/consul_{{ consul_version }}_linux_amd64.zip
    dest: /tmp
    remote_src: true
  when: not consul_install.stat.exists

- name: Copy Consul binary
  copy:
    src: /tmp/consul
    dest: /usr/local/bin/consul
    remote_src: true
    owner: root
    group: root
    mode: 0755
  when: not consul_install.stat.exists

####################################################################
# Setup Consul
####################################################################

- name: Create Consul directory
  file:
    path: '/var/lib/consul'
    state: directory
    owner: consul
    group: consul
    mode: 0755

- name: Create Consul config directory
  file:
    path: '/etc/consul.d'
    state: directory
    owner: consul
    group: consul

- name: Stat Consul data
  stat:
    path: '/var/lib/consu/node-id'
  register: consul_init

- name: Generate Consul encryption key
  shell: 'consul keygen'
  register: consul_keygen
  when: not consul_init.stat.exists

- name: Download Consul config
  template:
    src: 'conf/ansible/consul/consul.hcl'
    dest: '/etc/consul.d/consul.hcl'
    owner: consul
    group: consul
    mode: 0400
  when: not consul_init.stat.exists

- name: Copy SystemD for consul
  template:
    src: 'conf/ansible/consul/consul.service'
    dest: '/etc/systemd/system/consul.service'
    owner: root
    group: root
    mode: 0400

- name: Restart Consul service
  service:
    name: 'consul'
    state: restarted
    enabled: yes

- name: Consul healthcheck
  uri:
    url: "http://127.0.0.1:8500/v1/status/leader"
    follow_redirects: none
    method: GET
    remote_src: yes
  register: _result
  until: _result.status == 200
  retries: 720 # 720 * 5 seconds = 1hour (60*60/5)
  delay: 5 # Every 5 seconds

